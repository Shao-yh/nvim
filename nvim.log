说明：
此文档记录nvim配置的一些问题

---------------------------------------
2024-10-17 为什么要使用nvim
模块化，统一的插件管理，更快，更新。
lua 比VimScript 快
更多更新的插件支持

所以针对nvim,需要的是
知道自己需要什么功能的插件，如何自己查找/更新/配置插件

例如之前看代码都是打开两个中断，一个看代码，一个用grep搜索.
是否有插件可以在nvim中搜索关键字？
telescope就可以

vim-airline
顶部可以显示已打开的文件

补全类插件:
智能补全括号

对齐类插件:

分析代码辅助的插件
写代码辅助的插件
nvim-autopairs 自动补齐括号
外观类插件
---------------------------------------
2024-10-17 telescope插件功能fail
fail log:
E5108: Error executing lua: ...share/nvim/lazy/telescope.nvim/lua/telescope/pickers.lua:347: Invalid 'event': 'User TelescopeFindPre'
stack traceback:
        [C]: in function 'nvim_exec_autocmds'
        ...share/nvim/lazy/telescope.nvim/lua/telescope/pickers.lua:347: in function 'find'
        ...im/lazy/telescope.nvim/lua/telescope/builtin/__files.lua:161: in function 'v'
        ...im/lazy/telescope.nvim/lua/telescope/builtin/__files.lua:570: in function 'v'
        .../nvim/lazy/telescope.nvim/lua/telescope/builtin/init.lua:511: in function <.../nvim/lazy/telescope.nvim/lua/telescope/builtin/init.lua:478>

通过关键字百度，认为是插件依赖的问题，但是没有解决。
后续查看telescope.nvim的git, 对比自己的配置，发现是telescope.nvim本身版本的问题。
1. 安装ripgrep
2. 升级telescope 版本
补充：这个问题(缺少ripgrep)似乎可以用checkhealth检查出来
更新版本后解决。

2024-10-24 发现nvim跳转ctags很慢

2024-10-24 neotag.nvim debug
1. sudo apt install python3-pip
2. 
---------------------------------------
2025-01-06 
今天看到一个说法，是不要过度配置nvim.
因为nvim太新了, 很多插件经常不维护，archived.
这一点确实发现，花在nvim的配置时间很多。

今天重新了解了lsp， 解决了Outline不能使用的问题。
所以重新审视neovim 那些插件是必须的，那些环境是需要手动配置的。
1. lazy插件管理器，这是基础
2. 代码树，代码里打开文件夹
3. outline, 代码大纲
4. 文件搜索，关键词搜索。telescope， 比grep还要快，不需要另开终端
5. 终端
6. lsp， 以上很多功能都依赖lsp. 
7. lsp 相关的languague server. 基于clagd, c语言服务器，outline才可以解析C文件的函数变量宏之类的东西。
